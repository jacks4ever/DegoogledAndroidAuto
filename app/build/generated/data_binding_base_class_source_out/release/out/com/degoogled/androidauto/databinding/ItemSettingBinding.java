// Generated by view binder compiler. Do not edit!
package com.degoogled.androidauto.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.degoogled.androidauto.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemSettingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imageSettingIcon;

  @NonNull
  public final SwitchCompat switchSetting;

  @NonNull
  public final TextView textSettingDescription;

  @NonNull
  public final TextView textSettingTitle;

  private ItemSettingBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView imageSettingIcon, @NonNull SwitchCompat switchSetting,
      @NonNull TextView textSettingDescription, @NonNull TextView textSettingTitle) {
    this.rootView = rootView;
    this.imageSettingIcon = imageSettingIcon;
    this.switchSetting = switchSetting;
    this.textSettingDescription = textSettingDescription;
    this.textSettingTitle = textSettingTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemSettingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemSettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_setting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemSettingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.image_setting_icon;
      ImageView imageSettingIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageSettingIcon == null) {
        break missingId;
      }

      id = R.id.switch_setting;
      SwitchCompat switchSetting = ViewBindings.findChildViewById(rootView, id);
      if (switchSetting == null) {
        break missingId;
      }

      id = R.id.text_setting_description;
      TextView textSettingDescription = ViewBindings.findChildViewById(rootView, id);
      if (textSettingDescription == null) {
        break missingId;
      }

      id = R.id.text_setting_title;
      TextView textSettingTitle = ViewBindings.findChildViewById(rootView, id);
      if (textSettingTitle == null) {
        break missingId;
      }

      return new ItemSettingBinding((ConstraintLayout) rootView, imageSettingIcon, switchSetting,
          textSettingDescription, textSettingTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
