// Generated by view binder compiler. Do not edit!
package com.degoogled.minimalandroidauto.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.degoogled.minimalandroidauto.R;
import com.google.android.material.switchmaterial.SwitchMaterial;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonAugustLaunch;

  @NonNull
  public final Button buttonBack;

  @NonNull
  public final Button buttonLock;

  @NonNull
  public final Button buttonUnlock;

  @NonNull
  public final Button buttonViewActivity;

  @NonNull
  public final CardView cardAugust;

  @NonNull
  public final SwitchMaterial switchAugustPrivacy;

  @NonNull
  public final TextView textAugustStatus;

  @NonNull
  public final TextView textAugustTitle;

  @NonNull
  public final TextView textTitle;

  private ActivityHomeBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonAugustLaunch, @NonNull Button buttonBack, @NonNull Button buttonLock,
      @NonNull Button buttonUnlock, @NonNull Button buttonViewActivity,
      @NonNull CardView cardAugust, @NonNull SwitchMaterial switchAugustPrivacy,
      @NonNull TextView textAugustStatus, @NonNull TextView textAugustTitle,
      @NonNull TextView textTitle) {
    this.rootView = rootView;
    this.buttonAugustLaunch = buttonAugustLaunch;
    this.buttonBack = buttonBack;
    this.buttonLock = buttonLock;
    this.buttonUnlock = buttonUnlock;
    this.buttonViewActivity = buttonViewActivity;
    this.cardAugust = cardAugust;
    this.switchAugustPrivacy = switchAugustPrivacy;
    this.textAugustStatus = textAugustStatus;
    this.textAugustTitle = textAugustTitle;
    this.textTitle = textTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAugustLaunch;
      Button buttonAugustLaunch = ViewBindings.findChildViewById(rootView, id);
      if (buttonAugustLaunch == null) {
        break missingId;
      }

      id = R.id.buttonBack;
      Button buttonBack = ViewBindings.findChildViewById(rootView, id);
      if (buttonBack == null) {
        break missingId;
      }

      id = R.id.buttonLock;
      Button buttonLock = ViewBindings.findChildViewById(rootView, id);
      if (buttonLock == null) {
        break missingId;
      }

      id = R.id.buttonUnlock;
      Button buttonUnlock = ViewBindings.findChildViewById(rootView, id);
      if (buttonUnlock == null) {
        break missingId;
      }

      id = R.id.buttonViewActivity;
      Button buttonViewActivity = ViewBindings.findChildViewById(rootView, id);
      if (buttonViewActivity == null) {
        break missingId;
      }

      id = R.id.cardAugust;
      CardView cardAugust = ViewBindings.findChildViewById(rootView, id);
      if (cardAugust == null) {
        break missingId;
      }

      id = R.id.switchAugustPrivacy;
      SwitchMaterial switchAugustPrivacy = ViewBindings.findChildViewById(rootView, id);
      if (switchAugustPrivacy == null) {
        break missingId;
      }

      id = R.id.textAugustStatus;
      TextView textAugustStatus = ViewBindings.findChildViewById(rootView, id);
      if (textAugustStatus == null) {
        break missingId;
      }

      id = R.id.textAugustTitle;
      TextView textAugustTitle = ViewBindings.findChildViewById(rootView, id);
      if (textAugustTitle == null) {
        break missingId;
      }

      id = R.id.textTitle;
      TextView textTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTitle == null) {
        break missingId;
      }

      return new ActivityHomeBinding((ConstraintLayout) rootView, buttonAugustLaunch, buttonBack,
          buttonLock, buttonUnlock, buttonViewActivity, cardAugust, switchAugustPrivacy,
          textAugustStatus, textAugustTitle, textTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
