// Generated by view binder compiler. Do not edit!
package com.degoogled.minimalandroidauto.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.degoogled.minimalandroidauto.R;
import com.google.android.material.switchmaterial.SwitchMaterial;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentWazeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonLaunchWaze;

  @NonNull
  public final CardView cardWazePrivacy;

  @NonNull
  public final ImageView imageWazeLogo;

  @NonNull
  public final SwitchMaterial switchWazePrivacy;

  @NonNull
  public final TextView textWazeDescription;

  @NonNull
  public final TextView textWazePrivacyDescription;

  @NonNull
  public final TextView textWazePrivacyTitle;

  @NonNull
  public final TextView textWazeStatus;

  @NonNull
  public final TextView textWazeTitle;

  private FragmentWazeBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonLaunchWaze,
      @NonNull CardView cardWazePrivacy, @NonNull ImageView imageWazeLogo,
      @NonNull SwitchMaterial switchWazePrivacy, @NonNull TextView textWazeDescription,
      @NonNull TextView textWazePrivacyDescription, @NonNull TextView textWazePrivacyTitle,
      @NonNull TextView textWazeStatus, @NonNull TextView textWazeTitle) {
    this.rootView = rootView;
    this.buttonLaunchWaze = buttonLaunchWaze;
    this.cardWazePrivacy = cardWazePrivacy;
    this.imageWazeLogo = imageWazeLogo;
    this.switchWazePrivacy = switchWazePrivacy;
    this.textWazeDescription = textWazeDescription;
    this.textWazePrivacyDescription = textWazePrivacyDescription;
    this.textWazePrivacyTitle = textWazePrivacyTitle;
    this.textWazeStatus = textWazeStatus;
    this.textWazeTitle = textWazeTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentWazeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentWazeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_waze, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentWazeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonLaunchWaze;
      Button buttonLaunchWaze = ViewBindings.findChildViewById(rootView, id);
      if (buttonLaunchWaze == null) {
        break missingId;
      }

      id = R.id.cardWazePrivacy;
      CardView cardWazePrivacy = ViewBindings.findChildViewById(rootView, id);
      if (cardWazePrivacy == null) {
        break missingId;
      }

      id = R.id.imageWazeLogo;
      ImageView imageWazeLogo = ViewBindings.findChildViewById(rootView, id);
      if (imageWazeLogo == null) {
        break missingId;
      }

      id = R.id.switchWazePrivacy;
      SwitchMaterial switchWazePrivacy = ViewBindings.findChildViewById(rootView, id);
      if (switchWazePrivacy == null) {
        break missingId;
      }

      id = R.id.textWazeDescription;
      TextView textWazeDescription = ViewBindings.findChildViewById(rootView, id);
      if (textWazeDescription == null) {
        break missingId;
      }

      id = R.id.textWazePrivacyDescription;
      TextView textWazePrivacyDescription = ViewBindings.findChildViewById(rootView, id);
      if (textWazePrivacyDescription == null) {
        break missingId;
      }

      id = R.id.textWazePrivacyTitle;
      TextView textWazePrivacyTitle = ViewBindings.findChildViewById(rootView, id);
      if (textWazePrivacyTitle == null) {
        break missingId;
      }

      id = R.id.textWazeStatus;
      TextView textWazeStatus = ViewBindings.findChildViewById(rootView, id);
      if (textWazeStatus == null) {
        break missingId;
      }

      id = R.id.textWazeTitle;
      TextView textWazeTitle = ViewBindings.findChildViewById(rootView, id);
      if (textWazeTitle == null) {
        break missingId;
      }

      return new FragmentWazeBinding((ConstraintLayout) rootView, buttonLaunchWaze, cardWazePrivacy,
          imageWazeLogo, switchWazePrivacy, textWazeDescription, textWazePrivacyDescription,
          textWazePrivacyTitle, textWazeStatus, textWazeTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
